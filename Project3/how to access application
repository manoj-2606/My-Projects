##Once you have successfully build your application you can see the image that have been created using the below commad

~ docker image ls

Run the container and create a named Docker volume to map to the /data directory inside the container:

~ docker run -p 5000:5000 --name counter-container -v counter-data:/data counter-web-app

-p 5000:5000: Maps port 5000 on the host to port 5000 in the container.
--name counter-container: Assigns a name to your container.
-v counter-data:/data: Creates a named Docker volume called counter-data and mounts it to the /data directory inside the container.

Once the command ran successfully, you see an O/P like the below

root@MANOJ:/home/counter-app# docker run -p 5000:5000 --name another-counter -v counter-data:/data counter-web-app
 * Serving Flask app 'app'
 * Debug mode: on
WARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://172.17.0.2:5000
Press CTRL+C to quit
 * Restarting with stat
 * Debugger is active!
 * Debugger PIN: 136-517-382
172.17.0.1 - - [11/May/2025 01:38:10] "GET / HTTP/1.1" 200 -

This ensures that application is successfully running on the port 5000, after this check on your localhost ~ http://localhost:5000/

You should also see the counter increment each time you refresh the page.
  
##Test Data Persistence

Stop and remove the container:

~ docker stop counter-container
~ docker rm counter-container
  
Run a new container using the same volume:

~ docker run -p 5000:5000 --name another-counter -v counter-data:/data counter-web-app
  
Access http://localhost:5000 again. 

You should see that the counter has retained its previous value! This is because the data was stored in the counter-data Docker volume, which persists 
even when the container is stopped and removed.
