FROM python:3.9-slim-buster
WORKDIR /app
COPY requirements.txt .
RUN pip install -r requirements.txt
COPY . .
EXPOSE 5000
VOLUME /data
CMD ["python", "app.py"]


##How the above file works when we run the docker build commands
FROM python:3.9-slim-buster: Uses a slim Python image.

WORKDIR /app: Sets the working directory.

COPY requirements.txt .: Copies the dependencies file.

RUN pip install -r requirements.txt: Installs Flask.

COPY . .: Copies the application code and templates.

EXPOSE 5000: Exposes port 5000 for the Flask app.

VOLUME /data: This is the key part for data persistence! It declares /data as a Docker volume. This means any data written to /data inside the container will
be persisted outside the container on the host machine.

CMD ["python", "app.py"]: Runs the Flask application.
